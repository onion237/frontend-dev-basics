/*
구문(statement)
1. 실행 단위
2. 구문 구성
    - 값, 연산자 : 표현식
    - 주석 : 구문을 구성해도 실행되지 않음
    - 예약어 : if, const, ........ 
    - 공백 : 토큰 분리
    - 세미 콜론 : 표현식을 구문으로 만들어서 실행
    - 개행
구문의 예
if, if ~ else, for, for ~in
-> ;콜론을 붙이지 않음(그 자체로 이미 구문이므로, 표현식을 구문으로 만들어 실행시키는 기능을 하는 ;를 붙일 이유가 없음)



*/

/**
 * ;는 표현식을 표현식 구문으로 만들어서 표현식을 바로 실행하게 한다
 */
i = 10;
var s = "hello world"; console.log(s)

/**
 * 개행의 역할 1 : 분리가능한 표현식을 만났을 때, ;를 대체한다.
 */
var s = "hello world"
console.log(s)

/**
 * 개행의 역할 2 : 상황에 따라서는 토큰을 분리하는 역할(분리 불가능한 표현식)
 */
a  // a뒤에 ;를 붙이면(표현식 구문으로 만든 후 바로 실행시킨다면) 뒤의 토큰들이 유효한 표현식을 만들어 내지 못하므로 ;를 대체하는 역할 대신 토큰을 분리하는 역할로 동작
= 
2 
+ 
2
console
.log
(a)

//
var s = "hello world"  // 표현식
var s = "hello world"; // 구문 : ';' -> 표현식을 실행

o = {
    
}